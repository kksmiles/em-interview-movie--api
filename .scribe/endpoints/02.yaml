name: 'Category management'
description: |-

  APIs for managing categories
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/categories/{id}/forceDestroy'
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Force Destroy Category'
      description: 'This endpoint will permanently delete a category'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: id
        type: string
        custom: []
    cleanUrlParameters:
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Category successfully deleted"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/categories/{id}/restore'
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore category'
      description: 'This endpoint will restore a category'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: sit
        type: string
        custom: []
    cleanUrlParameters:
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Category successfully restored"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Index Categories'
      description: 'This endpoint will list all categories'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      include_trashed:
        name: include_trashed
        description: 'Include trashed users.'
        required: false
        example: false
        type: boolean
        custom: []
    cleanQueryParameters:
      include_trashed: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
                {
                    "id": 1,
                    "name": "Action",
                    "deleted_at": null
                },
                {
                    "id": 2,
                    "name": "Adventure",
                    "deleted_at": null
                },
                {
                    "id": 3,
                    "name": "Animation",
                    "deleted_at": null
                },
                {
                    "id": 4,
                    "name": "Biography",
                    "deleted_at": null
                },
                {
                    "id": 5,
                    "name": "Comedy",
                    "deleted_at": null
                },
                {
                    "id": 6,
                    "name": "Crime",
                    "deleted_at": null
                },
                {
                    "id": 7,
                    "name": "Sci-Fi",
                    "deleted_at": null
                },
                {
                    "id": 8,
                    "name": "Drama",
                    "deleted_at": null
                },
                {
                    "id": 9,
                    "name": "Fantasy",
                    "deleted_at": null
                },
                {
                    "id": 10,
                    "name": "Horror",
                    "deleted_at": null
                }
            ],
            "links": {
                "first": "http://movie-api.test/api/categories?page=1",
                "last": "http://movie-api.test/api/categories?page=1",
                "prev": null,
                "next": null
            },
            "meta": {
                "current_page": 1,
                "from": 1,
                "last_page": 1,
                "links": [
                    {
                        "url": null,
                        "label": "&laquo; Previous",
                        "active": false
                    },
                    {
                        "url": "http://movie-api.test/api/categories?page=1",
                        "label": "1",
                        "active": true
                    },
                    {
                        "url": null,
                        "label": "Next &raquo;",
                        "active": false
                    }
                ],
                "path": "http://movie-api.test/api/categories",
                "per_page": 15,
                "to": 10,
                "total": 10
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Store Category'
      description: 'This endpoint will create a new category'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category. Must not be greater than 255 characters.'
        required: true
        example: 'My Category'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'My Category'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Category successfully created"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |
          {
            "message": "The example_field1 is required. (and 2 more errors)",
            "errors": {
                "example_field1": ["The example_field1 field is required."],
                "example_field2": ["The example_field2 field must be numeric."],
                "example_field3": ["The example_field3 field must be a date."]
            }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Show category'
      description: 'This endpoint will show the details of the category including favourite movies, categories and categories'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Category successfully retrieved",
            "data": {
                "id": 4,
                "name": "Biography",
                "movies": [
                    {
                        "slug": "titanic",
                        "title": "Titanic",
                        "description": "A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.",
                        "released_date": null,
                        "available_until": "2023-06-30T23:59:59.000000Z",
                        "length_in_seconds": 11640,
                        "deleted_at": null
                    }
                ],
                "deleted_at": null
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Category'
      description: 'This endpoint will update a Category'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category. Must not be greater than 255 characters.'
        required: true
        example: 'My Category'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'My Category'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Category successfully updated"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |
          {
            "message": "The example_field1 is required. (and 2 more errors)",
            "errors": {
                "example_field1": ["The example_field1 field is required."],
                "example_field2": ["The example_field2 field must be numeric."],
                "example_field3": ["The example_field3 field must be a date."]
            }
          }
        headers: []
        description: 'Validation Error'
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category management'
      groupDescription: |-

        APIs for managing categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete category'
      description: 'This endpoint will delete a category'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 17
        type: integer
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Category successfully trashed"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
