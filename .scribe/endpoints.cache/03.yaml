## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Movie management'
description: |-

  APIs for managing movies
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/movies/{id}/forceDestroy'
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Force Destroy movie'
      description: 'This endpoint will permanently delete a movie'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: occaecati
        type: string
        custom: []
    cleanUrlParameters:
      id: occaecati
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Movie successfully deleted"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{id}/restore'
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore movie'
      description: 'This endpoint will restore a movie'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the movie.'
        required: true
        example: neque
        type: string
        custom: []
    cleanUrlParameters:
      id: neque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Movie successfully restored"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Index Movies'
      description: 'This endpoint will list all movies'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      include_trashed:
        name: include_trashed
        description: 'Include trashed users.'
        required: false
        example: false
        type: boolean
        custom: []
      category_ids:
        name: category_ids
        description: 'Filter by category ids.'
        required: false
        example:
          - 1
        type: 'integer[]'
        custom: []
      tag_ids:
        name: tag_ids
        description: 'Filter by tag ids.'
        required: false
        example:
          - 1
        type: 'integer[]'
        custom: []
      include_categories:
        name: include_categories
        description: 'Include categories.'
        required: false
        example: false
        type: boolean
        custom: []
      include_tags:
        name: include_tags
        description: 'Include tags.'
        required: false
        example: false
        type: boolean
        custom: []
      include_pictures:
        name: include_pictures
        description: 'Include pictures.'
        required: false
        example: false
        type: boolean
        custom: []
      strict_filter:
        name: strict_filter
        description: 'Whether to strictly filter by category and tag ids.'
        required: false
        example: false
        type: boolean
        custom: []
    cleanQueryParameters:
      include_trashed: false
      category_ids:
        - 1
      tag_ids:
        - 1
      include_categories: false
      include_tags: false
      include_pictures: false
      strict_filter: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
                {
                    "slug": "the-matrix",
                    "title": "The Matrix",
                    "description": "A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.",
                    "released_date": null,
                    "available_until": "2023-06-30T23:59:59.000000Z",
                    "length_in_seconds": 8160,
                    "deleted_at": null
                },
                {
                    "slug": "titanic",
                    "title": "Titanic",
                    "description": "A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.",
                    "released_date": null,
                    "available_until": "2023-06-30T23:59:59.000000Z",
                    "length_in_seconds": 11640,
                    "deleted_at": null
                },
                {
                    "slug": "star-wars-episode-v-the-empire-strikes-back",
                    "title": "Star Wars: Episode V - The Empire Strikes Back",
                    "description": "After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.",
                    "released_date": null,
                    "available_until": "2023-06-30T23:59:59.000000Z",
                    "length_in_seconds": 7440,
                    "deleted_at": null
                }
            ],
            "links": {
                "first": "http://movie-api.test/api/movies?page=1",
                "last": "http://movie-api.test/api/movies?page=1",
                "prev": null,
                "next": null
            },
            "meta": {
                "current_page": 1,
                "from": 1,
                "last_page": 1,
                "links": [
                    {
                        "url": null,
                        "label": "&laquo; Previous",
                        "active": false
                    },
                    {
                        "url": "http://movie-api.test/api/movies?page=1",
                        "label": "1",
                        "active": true
                    },
                    {
                        "url": null,
                        "label": "Next &raquo;",
                        "active": false
                    }
                ],
                "path": "http://movie-api.test/api/movies",
                "per_page": 15,
                "to": 3,
                "total": 3
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Store Movie'
      description: 'This endpoint will create a new movie'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the movie. Must not be greater than 255 characters.'
        required: true
        example: 'The Matrix'
        type: string
        custom: []
      description:
        name: description
        description: 'The description of the movie. Must not be greater than 1000 characters.'
        required: true
        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
        type: string
        custom: []
      length_in_seconds:
        name: length_in_seconds
        description: 'The length of the movie in seconds. Must be at least 0. Must not be greater than 86400.'
        required: true
        example: 7260.0
        type: number
        custom: []
      released_at:
        name: released_at
        description: 'The date when the movie was released. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
        required: false
        example: '1999-03-31'
        type: string
        custom: []
      available_until:
        name: available_until
        description: 'The date when the movie will be available until. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
        required: false
        example: '2021-12-31'
        type: string
        custom: []
      pictures:
        name: pictures
        description: ''
        required: true
        example:
          - []
        type: 'object[]'
        custom: []
      category_ids:
        name: category_ids
        description: 'The categories of the movie.'
        required: true
        example:
          - 1.0
        type: 'number[]'
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tags of the movie.'
        required: true
        example:
          - 1.0
        type: 'number[]'
        custom: []
      'pictures[].title':
        name: 'pictures[].title'
        description: 'The title of the picture. Must not be greater than 255 characters.'
        required: true
        example: 'The Matrix'
        type: string
        custom: []
      'pictures[].description':
        name: 'pictures[].description'
        description: 'The description of the picture. Must not be greater than 1000 characters.'
        required: true
        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
        type: string
        custom: []
      'pictures[].order':
        name: 'pictures[].order'
        description: 'The order of the picture. Must be at least 0. Must not be greater than 100.'
        required: true
        example: 1.0
        type: number
        custom: []
      'pictures[].image':
        name: 'pictures[].image'
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      title: 'The Matrix'
      description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
      length_in_seconds: 7260.0
      released_at: '1999-03-31'
      available_until: '2021-12-31'
      pictures:
        -
          title: 'The Matrix'
          description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
          order: 1.0
      category_ids:
        - 1.0
      tag_ids:
        - 1.0
    fileParameters:
      pictures:
        -
          image: null
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Movie successfully created"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |
          {
            "message": "The example_field1 is required. (and 2 more errors)",
            "errors": {
                "example_field1": ["The example_field1 field is required."],
                "example_field2": ["The example_field2 field must be numeric."],
                "example_field3": ["The example_field3 field must be a date."]
            }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{slug}'
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Movie'
      description: 'This endpoint will show a movie'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the movie.'
        required: true
        example: omnis
        type: string
        custom: []
    cleanUrlParameters:
      slug: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Package successfully retrieved",
            "data": {
                "slug": "the-matrix",
                "title": "The Matrix",
                "description": "A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.",
                "released_date": null,
                "available_until": "2023-06-30T23:59:59.000000Z",
                "length_in_seconds": 8160,
                "pictures": [
                    {
                        "id": 1,
                        "title": "The matrix one",
                        "description": "First picture of the matrix movie",
                        "image_url": "https://placekitten.com/320/180",
                        "order": 1
                    },
                    {
                        "id": 2,
                        "title": "The matrix two",
                        "description": "Second picture of the matrix movie",
                        "image_url": "https://placekitten.com/336/189",
                        "order": 2
                    }
                ],
                "tags": [
                    {
                        "id": 3,
                        "name": "Sci-fi",
                        "deleted_at": null
                    },
                    {
                        "id": 6,
                        "name": "Epic",
                        "deleted_at": null
                    }
                ],
                "categories": [
                    {
                        "id": 1,
                        "name": "Action",
                        "deleted_at": null
                    },
                    {
                        "id": 3,
                        "name": "Animation",
                        "deleted_at": null
                    },
                    {
                        "id": 5,
                        "name": "Comedy",
                        "deleted_at": null
                    }
                ],
                "deleted_at": null
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/movies/{slug}'
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the movie.'
        required: true
        example: autem
        type: string
        custom: []
    cleanUrlParameters:
      slug: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the movie. Must not be greater than 255 characters.'
        required: true
        example: 'The Matrix'
        type: string
        custom: []
      description:
        name: description
        description: 'The description of the movie. Must not be greater than 1000 characters.'
        required: true
        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
        type: string
        custom: []
      length_in_seconds:
        name: length_in_seconds
        description: 'The length of the movie in seconds. Must be at least 0. Must not be greater than 86400.'
        required: true
        example: 7260.0
        type: number
        custom: []
      released_at:
        name: released_at
        description: 'The date when the movie was released. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
        required: false
        example: '1999-03-31'
        type: string
        custom: []
      available_until:
        name: available_until
        description: 'The date when the movie will be available until. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
        required: false
        example: '2021-12-31'
        type: string
        custom: []
      pictures:
        name: pictures
        description: ''
        required: true
        example:
          - []
        type: 'object[]'
        custom: []
      category_ids:
        name: category_ids
        description: 'The categories of the movie.'
        required: true
        example:
          - 1.0
        type: 'number[]'
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tags of the movie.'
        required: true
        example:
          - 1.0
        type: 'number[]'
        custom: []
      remove_picture_ids:
        name: remove_picture_ids
        description: 'The IDs of the pictures to be removed.'
        required: true
        example:
          - 1.0
        type: 'number[]'
        custom: []
      'pictures[].title':
        name: 'pictures[].title'
        description: 'The title of the picture. Must not be greater than 255 characters.'
        required: true
        example: 'The Matrix'
        type: string
        custom: []
      'pictures[].description':
        name: 'pictures[].description'
        description: 'The description of the picture. Must not be greater than 1000 characters.'
        required: true
        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
        type: string
        custom: []
      'pictures[].order':
        name: 'pictures[].order'
        description: 'The order of the picture. Must be at least 0. Must not be greater than 100.'
        required: true
        example: 1.0
        type: number
        custom: []
      'pictures[].image':
        name: 'pictures[].image'
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      title: 'The Matrix'
      description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
      length_in_seconds: 7260.0
      released_at: '1999-03-31'
      available_until: '2021-12-31'
      pictures:
        -
          title: 'The Matrix'
          description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
          order: 1.0
      category_ids:
        - 1.0
      tag_ids:
        - 1.0
      remove_picture_ids:
        - 1.0
    fileParameters:
      pictures:
        -
          image: null
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Movie successfully updated"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{slug}'
    metadata:
      groupName: 'Movie management'
      groupDescription: |-

        APIs for managing movies
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Movie'
      description: 'This endpoint will delete a movie'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the movie.'
        required: true
        example: itaque
        type: string
        custom: []
    cleanUrlParameters:
      slug: itaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Movie successfully trashed"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |
          {
            "message": "No query results for model [App\\Models\\ModelName] 1"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
