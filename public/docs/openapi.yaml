openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://movie-api.test'
paths:
  '/api/categories/{id}/forceDestroy':
    post:
      summary: 'Force Destroy Category'
      operationId: forceDestroyCategory
      description: 'This endpoint will permanently delete a category'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Category management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: id
        required: true
        schema:
          type: string
  '/api/categories/{id}/restore':
    post:
      summary: 'Restore category'
      operationId: restoreCategory
      description: 'This endpoint will restore a category'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully restored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully restored'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Category management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: sit
        required: true
        schema:
          type: string
  /api/categories:
    get:
      summary: 'Index Categories'
      operationId: indexCategories
      description: 'This endpoint will list all categories'
      parameters:
        -
          in: query
          name: include_trashed
          description: 'Include trashed users.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include trashed users.'
            example: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Action
                      deleted_at: null
                    -
                      id: 2
                      name: Adventure
                      deleted_at: null
                    -
                      id: 3
                      name: Animation
                      deleted_at: null
                    -
                      id: 4
                      name: Biography
                      deleted_at: null
                    -
                      id: 5
                      name: Comedy
                      deleted_at: null
                    -
                      id: 6
                      name: Crime
                      deleted_at: null
                    -
                      id: 7
                      name: Sci-Fi
                      deleted_at: null
                    -
                      id: 8
                      name: Drama
                      deleted_at: null
                    -
                      id: 9
                      name: Fantasy
                      deleted_at: null
                    -
                      id: 10
                      name: Horror
                      deleted_at: null
                  links:
                    first: 'http://movie-api.test/api/categories?page=1'
                    last: 'http://movie-api.test/api/categories?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://movie-api.test/api/categories?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://movie-api.test/api/categories'
                    per_page: 15
                    to: 10
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Action
                        deleted_at: null
                      -
                        id: 2
                        name: Adventure
                        deleted_at: null
                      -
                        id: 3
                        name: Animation
                        deleted_at: null
                      -
                        id: 4
                        name: Biography
                        deleted_at: null
                      -
                        id: 5
                        name: Comedy
                        deleted_at: null
                      -
                        id: 6
                        name: Crime
                        deleted_at: null
                      -
                        id: 7
                        name: Sci-Fi
                        deleted_at: null
                      -
                        id: 8
                        name: Drama
                        deleted_at: null
                      -
                        id: 9
                        name: Fantasy
                        deleted_at: null
                      -
                        id: 10
                        name: Horror
                        deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Action
                        deleted_at:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://movie-api.test/api/categories?page=1'
                      last:
                        type: string
                        example: 'http://movie-api.test/api/categories?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://movie-api.test/api/categories?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://movie-api.test/api/categories'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 10
      tags:
        - 'Category management'
      security: []
    post:
      summary: 'Store Category'
      operationId: storeCategory
      description: 'This endpoint will create a new category'
      parameters: []
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully created'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully created'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
      tags:
        - 'Category management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category. Must not be greater than 255 characters.'
                  example: 'My Category'
              required:
                - name
      security: []
  '/api/categories/{id}':
    get:
      summary: 'Show category'
      operationId: showCategory
      description: 'This endpoint will show the details of the category including favourite movies, categories and categories'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully retrieved'
                  data:
                    id: 4
                    name: Biography
                    movies:
                      -
                        slug: titanic
                        title: Titanic
                        description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 11640
                        deleted_at: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully retrieved'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: Biography
                      movies:
                        type: array
                        example:
                          -
                            slug: titanic
                            title: Titanic
                            description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                            released_date: null
                            available_until: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds: 11640
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: titanic
                            title:
                              type: string
                              example: Titanic
                            description:
                              type: string
                              example: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                            released_date:
                              type: string
                              example: null
                            available_until:
                              type: string
                              example: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds:
                              type: integer
                              example: 11640
                            deleted_at:
                              type: string
                              example: null
                      deleted_at:
                        type: string
                        example: null
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Category management'
      security: []
    put:
      summary: 'Update Category'
      operationId: updateCategory
      description: 'This endpoint will update a Category'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully updated'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Category management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category. Must not be greater than 255 characters.'
                  example: 'My Category'
              required:
                - name
      security: []
    delete:
      summary: 'Delete category'
      operationId: deleteCategory
      description: 'This endpoint will delete a category'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category successfully trashed'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category successfully trashed'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Category management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/movie_pictures/fetch:
    get:
      summary: 'Fetch Movie Picture'
      operationId: fetchMoviePicture
      description: 'This endpoint will let you fetch the image of a given movie picture path'
      parameters:
        -
          in: query
          name: path
          description: 'The path of the movie picture.'
          example: movies/1/1.jpg
          required: true
          schema:
            type: string
            description: 'The path of the movie picture.'
            example: movies/1/1.jpg
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Movie Picture management'
      security: []
  '/api/movies/{id}/forceDestroy':
    post:
      summary: 'Force Destroy movie'
      operationId: forceDestroyMovie
      description: 'This endpoint will permanently delete a movie'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Movie successfully deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Movie successfully deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Movie management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the movie.'
        example: occaecati
        required: true
        schema:
          type: string
  '/api/movies/{id}/restore':
    post:
      summary: 'Restore movie'
      operationId: restoreMovie
      description: 'This endpoint will restore a movie'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Movie successfully restored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Movie successfully restored'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Movie management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the movie.'
        example: neque
        required: true
        schema:
          type: string
  /api/movies:
    get:
      summary: 'Index Movies'
      operationId: indexMovies
      description: 'This endpoint will list all movies'
      parameters:
        -
          in: query
          name: include_trashed
          description: 'Include trashed users.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include trashed users.'
            example: false
        -
          in: query
          name: category_ids
          description: 'Filter by category ids.'
          example:
            - 1
          required: false
          schema:
            type: array
            description: 'Filter by category ids.'
            example:
              - 1
            items:
              type: integer
        -
          in: query
          name: tag_ids
          description: 'Filter by tag ids.'
          example:
            - 1
          required: false
          schema:
            type: array
            description: 'Filter by tag ids.'
            example:
              - 1
            items:
              type: integer
        -
          in: query
          name: include_categories
          description: 'Include categories.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include categories.'
            example: false
        -
          in: query
          name: include_tags
          description: 'Include tags.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include tags.'
            example: false
        -
          in: query
          name: include_pictures
          description: 'Include pictures.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include pictures.'
            example: false
        -
          in: query
          name: strict_filter
          description: 'Whether to strictly filter by category and tag ids.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Whether to strictly filter by category and tag ids.'
            example: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      slug: the-matrix
                      title: 'The Matrix'
                      description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                      released_date: null
                      available_until: '2023-06-30T23:59:59.000000Z'
                      length_in_seconds: 8160
                      deleted_at: null
                    -
                      slug: titanic
                      title: Titanic
                      description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                      released_date: null
                      available_until: '2023-06-30T23:59:59.000000Z'
                      length_in_seconds: 11640
                      deleted_at: null
                    -
                      slug: star-wars-episode-v-the-empire-strikes-back
                      title: 'Star Wars: Episode V - The Empire Strikes Back'
                      description: 'After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.'
                      released_date: null
                      available_until: '2023-06-30T23:59:59.000000Z'
                      length_in_seconds: 7440
                      deleted_at: null
                  links:
                    first: 'http://movie-api.test/api/movies?page=1'
                    last: 'http://movie-api.test/api/movies?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://movie-api.test/api/movies?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://movie-api.test/api/movies'
                    per_page: 15
                    to: 3
                    total: 3
                properties:
                  data:
                    type: array
                    example:
                      -
                        slug: the-matrix
                        title: 'The Matrix'
                        description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 8160
                        deleted_at: null
                      -
                        slug: titanic
                        title: Titanic
                        description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 11640
                        deleted_at: null
                      -
                        slug: star-wars-episode-v-the-empire-strikes-back
                        title: 'Star Wars: Episode V - The Empire Strikes Back'
                        description: 'After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 7440
                        deleted_at: null
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                          example: the-matrix
                        title:
                          type: string
                          example: 'The Matrix'
                        description:
                          type: string
                          example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                        released_date:
                          type: string
                          example: null
                        available_until:
                          type: string
                          example: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds:
                          type: integer
                          example: 8160
                        deleted_at:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://movie-api.test/api/movies?page=1'
                      last:
                        type: string
                        example: 'http://movie-api.test/api/movies?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://movie-api.test/api/movies?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://movie-api.test/api/movies'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
      tags:
        - 'Movie management'
      security: []
    post:
      summary: 'Store Movie'
      operationId: storeMovie
      description: 'This endpoint will create a new movie'
      parameters: []
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Movie successfully created'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Movie successfully created'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the movie. Must not be greater than 255 characters.'
                  example: 'The Matrix'
                description:
                  type: string
                  description: 'The description of the movie. Must not be greater than 1000 characters.'
                  example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                length_in_seconds:
                  type: number
                  description: 'The length of the movie in seconds. Must be at least 0. Must not be greater than 86400.'
                  example: 7260.0
                released_at:
                  type: string
                  description: 'The date when the movie was released. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
                  example: '1999-03-31'
                available_until:
                  type: string
                  description: 'The date when the movie will be available until. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
                  example: '2021-12-31'
                pictures:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        description: 'The title of the picture. Must not be greater than 255 characters.'
                        example: 'The Matrix'
                      description:
                        type: string
                        description: 'The description of the picture. Must not be greater than 1000 characters.'
                        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                      order:
                        type: number
                        description: 'The order of the picture. Must be at least 0. Must not be greater than 100.'
                        example: 1.0
                      image:
                        type: string
                        format: binary
                        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
                    required:
                      - title
                      - description
                      - order
                      - image
                category_ids:
                  type: array
                  description: 'The categories of the movie.'
                  example:
                    - 1.0
                  items:
                    type: number
                tag_ids:
                  type: array
                  description: 'The tags of the movie.'
                  example:
                    - 1.0
                  items:
                    type: number
              required:
                - title
                - description
                - length_in_seconds
                - pictures
                - category_ids
                - tag_ids
      security: []
  '/api/movies/{slug}':
    get:
      summary: 'Show Movie'
      operationId: showMovie
      description: 'This endpoint will show a movie'
      parameters: []
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Package successfully retrieved'
                  data:
                    slug: the-matrix
                    title: 'The Matrix'
                    description: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                    released_date: null
                    available_until: '2023-06-30T23:59:59.000000Z'
                    length_in_seconds: 8160
                    pictures:
                      -
                        id: 1
                        title: 'The matrix one'
                        description: 'First picture of the matrix movie'
                        image_url: 'https://placekitten.com/320/180'
                        order: 1
                      -
                        id: 2
                        title: 'The matrix two'
                        description: 'Second picture of the matrix movie'
                        image_url: 'https://placekitten.com/336/189'
                        order: 2
                    tags:
                      -
                        id: 3
                        name: Sci-fi
                        deleted_at: null
                      -
                        id: 6
                        name: Epic
                        deleted_at: null
                    categories:
                      -
                        id: 1
                        name: Action
                        deleted_at: null
                      -
                        id: 3
                        name: Animation
                        deleted_at: null
                      -
                        id: 5
                        name: Comedy
                        deleted_at: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Package successfully retrieved'
                  data:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: the-matrix
                      title:
                        type: string
                        example: 'The Matrix'
                      description:
                        type: string
                        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                      released_date:
                        type: string
                        example: null
                      available_until:
                        type: string
                        example: '2023-06-30T23:59:59.000000Z'
                      length_in_seconds:
                        type: integer
                        example: 8160
                      pictures:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'The matrix one'
                            description: 'First picture of the matrix movie'
                            image_url: 'https://placekitten.com/320/180'
                            order: 1
                          -
                            id: 2
                            title: 'The matrix two'
                            description: 'Second picture of the matrix movie'
                            image_url: 'https://placekitten.com/336/189'
                            order: 2
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'The matrix one'
                            description:
                              type: string
                              example: 'First picture of the matrix movie'
                            image_url:
                              type: string
                              example: 'https://placekitten.com/320/180'
                            order:
                              type: integer
                              example: 1
                      tags:
                        type: array
                        example:
                          -
                            id: 3
                            name: Sci-fi
                            deleted_at: null
                          -
                            id: 6
                            name: Epic
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 3
                            name:
                              type: string
                              example: Sci-fi
                            deleted_at:
                              type: string
                              example: null
                      categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Action
                            deleted_at: null
                          -
                            id: 3
                            name: Animation
                            deleted_at: null
                          -
                            id: 5
                            name: Comedy
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Action
                            deleted_at:
                              type: string
                              example: null
                      deleted_at:
                        type: string
                        example: null
      tags:
        - 'Movie management'
      security: []
    put:
      summary: 'Update Movie'
      operationId: updateMovie
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Movie successfully updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Movie successfully updated'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the movie. Must not be greater than 255 characters.'
                  example: 'The Matrix'
                description:
                  type: string
                  description: 'The description of the movie. Must not be greater than 1000 characters.'
                  example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                length_in_seconds:
                  type: number
                  description: 'The length of the movie in seconds. Must be at least 0. Must not be greater than 86400.'
                  example: 7260.0
                released_at:
                  type: string
                  description: 'The date when the movie was released. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
                  example: '1999-03-31'
                available_until:
                  type: string
                  description: 'The date when the movie will be available until. Format: YYYY-MM-DD. Timezone: UTC. Must be a valid date.'
                  example: '2021-12-31'
                pictures:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        description: 'The title of the picture. Must not be greater than 255 characters.'
                        example: 'The Matrix'
                      description:
                        type: string
                        description: 'The description of the picture. Must not be greater than 1000 characters.'
                        example: 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.'
                      order:
                        type: number
                        description: 'The order of the picture. Must be at least 0. Must not be greater than 100.'
                        example: 1.0
                      image:
                        type: string
                        format: binary
                        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
                    required:
                      - title
                      - description
                      - order
                      - image
                category_ids:
                  type: array
                  description: 'The categories of the movie.'
                  example:
                    - 1.0
                  items:
                    type: number
                tag_ids:
                  type: array
                  description: 'The tags of the movie.'
                  example:
                    - 1.0
                  items:
                    type: number
                remove_picture_ids:
                  type: array
                  description: 'The IDs of the pictures to be removed.'
                  example:
                    - 1.0
                  items:
                    type: number
              required:
                - title
                - description
                - length_in_seconds
                - pictures
                - category_ids
                - tag_ids
                - remove_picture_ids
    delete:
      summary: 'Delete Movie'
      operationId: deleteMovie
      description: 'This endpoint will delete a movie'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Movie successfully trashed'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Movie successfully trashed'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Movie management'
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the movie.'
        example: omnis
        required: true
        schema:
          type: string
  '/api/tags/{id}/forceDestroy':
    post:
      summary: 'Force Destroy tag'
      operationId: forceDestroyTag
      description: 'This endpoint will permanently delete a tag'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Tag management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: magnam
        required: true
        schema:
          type: string
  '/api/tags/{id}/restore':
    post:
      summary: 'Restore tag'
      operationId: restoreTag
      description: 'This endpoint will restore a tag'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully restored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully restored'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Tag management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: iste
        required: true
        schema:
          type: string
  /api/tags:
    get:
      summary: 'Index Tags'
      operationId: indexTags
      description: 'This endpoint will list all tags'
      parameters:
        -
          in: query
          name: include_trashed
          description: 'Include trashed users.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include trashed users.'
            example: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Thrilling
                      deleted_at: null
                    -
                      id: 2
                      name: Rom-com
                      deleted_at: null
                    -
                      id: 3
                      name: Sci-fi
                      deleted_at: null
                    -
                      id: 4
                      name: Historical
                      deleted_at: null
                    -
                      id: 5
                      name: Psychological
                      deleted_at: null
                    -
                      id: 6
                      name: Epic
                      deleted_at: null
                    -
                      id: 7
                      name: Horror
                      deleted_at: null
                    -
                      id: 8
                      name: Inspirational
                      deleted_at: null
                    -
                      id: 9
                      name: Satire
                      deleted_at: null
                    -
                      id: 10
                      name: Psychological
                      deleted_at: null
                  links:
                    first: 'http://movie-api.test/api/tags?page=1'
                    last: 'http://movie-api.test/api/tags?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://movie-api.test/api/tags?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://movie-api.test/api/tags'
                    per_page: 15
                    to: 10
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Thrilling
                        deleted_at: null
                      -
                        id: 2
                        name: Rom-com
                        deleted_at: null
                      -
                        id: 3
                        name: Sci-fi
                        deleted_at: null
                      -
                        id: 4
                        name: Historical
                        deleted_at: null
                      -
                        id: 5
                        name: Psychological
                        deleted_at: null
                      -
                        id: 6
                        name: Epic
                        deleted_at: null
                      -
                        id: 7
                        name: Horror
                        deleted_at: null
                      -
                        id: 8
                        name: Inspirational
                        deleted_at: null
                      -
                        id: 9
                        name: Satire
                        deleted_at: null
                      -
                        id: 10
                        name: Psychological
                        deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Thrilling
                        deleted_at:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://movie-api.test/api/tags?page=1'
                      last:
                        type: string
                        example: 'http://movie-api.test/api/tags?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://movie-api.test/api/tags?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://movie-api.test/api/tags'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 10
      tags:
        - 'Tag management'
      security: []
    post:
      summary: 'Store Tag'
      operationId: storeTag
      description: 'This endpoint will create a new tag'
      parameters: []
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully created'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully created'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
      tags:
        - 'Tag management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the tag. Must not be greater than 255 characters.'
                  example: 'My Tag'
              required:
                - name
      security: []
  '/api/tags/{id}':
    get:
      summary: 'Show tag'
      operationId: showTag
      description: 'This endpoint will show the details of the tag including favourite movies, categories and tags'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully retrieved'
                  data:
                    id: 5
                    name: Psychological
                    movies:
                      -
                        slug: the-dark-knight
                        title: 'The Dark Knight'
                        description: 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 9120
                        deleted_at: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully retrieved'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: Psychological
                      movies:
                        type: array
                        example:
                          -
                            slug: the-dark-knight
                            title: 'The Dark Knight'
                            description: 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.'
                            released_date: null
                            available_until: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds: 9120
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: the-dark-knight
                            title:
                              type: string
                              example: 'The Dark Knight'
                            description:
                              type: string
                              example: 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.'
                            released_date:
                              type: string
                              example: null
                            available_until:
                              type: string
                              example: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds:
                              type: integer
                              example: 9120
                            deleted_at:
                              type: string
                              example: null
                      deleted_at:
                        type: string
                        example: null
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Tag management'
      security: []
    put:
      summary: 'Update Tag'
      operationId: updateTag
      description: 'This endpoint will update a Tag'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully updated'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Tag management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the tag. Must not be greater than 255 characters.'
                  example: 'My Tag'
              required:
                - name
      security: []
    delete:
      summary: 'Delete tag'
      operationId: deleteTag
      description: 'This endpoint will delete a tag'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Tag successfully trashed'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Tag successfully trashed'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'Tag management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 17
        required: true
        schema:
          type: integer
  '/api/users/{id}/forceDestroy':
    post:
      summary: 'Force Destroy user'
      operationId: forceDestroyUser
      description: 'This endpoint will permanently delete a user'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully deleted'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: vel
        required: true
        schema:
          type: string
  '/api/users/{id}/restore':
    post:
      summary: 'Restore user'
      operationId: restoreUser
      description: 'This endpoint will restore a user'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully restored'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully restored'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: ducimus
        required: true
        schema:
          type: string
  /api/users:
    get:
      summary: 'Index Users'
      operationId: indexUsers
      description: 'This endpoint will list all users'
      parameters:
        -
          in: query
          name: include_trashed
          description: 'Include trashed users.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Include trashed users.'
            example: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Irma Cronin'
                      email: conor.williamson@example.org
                      phone_no: 1-931-312-0031
                      deleted_at: null
                    -
                      id: 2
                      name: 'Clifton Sanford MD'
                      email: orrin32@example.com
                      phone_no: '(541) 520-3759'
                      deleted_at: null
                    -
                      id: 3
                      name: 'Dr. Earnestine Pacocha'
                      email: llewellyn32@example.net
                      phone_no: 1-682-751-0553
                      deleted_at: null
                    -
                      id: 4
                      name: 'Vernie Roberts'
                      email: schuster.blake@example.org
                      phone_no: +1-228-783-6278
                      deleted_at: null
                    -
                      id: 5
                      name: 'Rylan Heaney I'
                      email: ckonopelski@example.net
                      phone_no: '(973) 586-8948'
                      deleted_at: null
                    -
                      id: 6
                      name: 'Isabell Pagac'
                      email: frederic.kuhn@example.net
                      phone_no: '(508) 754-0538'
                      deleted_at: null
                    -
                      id: 7
                      name: "Mr. Bud D'Amore"
                      email: daija.corkery@example.org
                      phone_no: '(270) 303-9172'
                      deleted_at: null
                    -
                      id: 8
                      name: 'Dr. Lloyd Cassin'
                      email: raven85@example.org
                      phone_no: 1-220-300-6490
                      deleted_at: null
                    -
                      id: 9
                      name: 'Dr. Natalie Collier III'
                      email: odaniel@example.net
                      phone_no: '(986) 979-0901'
                      deleted_at: null
                    -
                      id: 10
                      name: 'Prof. Darron Bechtelar'
                      email: randall.macejkovic@example.com
                      phone_no: '+13604221010'
                      deleted_at: null
                  links:
                    first: 'http://movie-api.test/api/users?page=1'
                    last: 'http://movie-api.test/api/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://movie-api.test/api/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://movie-api.test/api/users'
                    per_page: 15
                    to: 10
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Irma Cronin'
                        email: conor.williamson@example.org
                        phone_no: 1-931-312-0031
                        deleted_at: null
                      -
                        id: 2
                        name: 'Clifton Sanford MD'
                        email: orrin32@example.com
                        phone_no: '(541) 520-3759'
                        deleted_at: null
                      -
                        id: 3
                        name: 'Dr. Earnestine Pacocha'
                        email: llewellyn32@example.net
                        phone_no: 1-682-751-0553
                        deleted_at: null
                      -
                        id: 4
                        name: 'Vernie Roberts'
                        email: schuster.blake@example.org
                        phone_no: +1-228-783-6278
                        deleted_at: null
                      -
                        id: 5
                        name: 'Rylan Heaney I'
                        email: ckonopelski@example.net
                        phone_no: '(973) 586-8948'
                        deleted_at: null
                      -
                        id: 6
                        name: 'Isabell Pagac'
                        email: frederic.kuhn@example.net
                        phone_no: '(508) 754-0538'
                        deleted_at: null
                      -
                        id: 7
                        name: "Mr. Bud D'Amore"
                        email: daija.corkery@example.org
                        phone_no: '(270) 303-9172'
                        deleted_at: null
                      -
                        id: 8
                        name: 'Dr. Lloyd Cassin'
                        email: raven85@example.org
                        phone_no: 1-220-300-6490
                        deleted_at: null
                      -
                        id: 9
                        name: 'Dr. Natalie Collier III'
                        email: odaniel@example.net
                        phone_no: '(986) 979-0901'
                        deleted_at: null
                      -
                        id: 10
                        name: 'Prof. Darron Bechtelar'
                        email: randall.macejkovic@example.com
                        phone_no: '+13604221010'
                        deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Irma Cronin'
                        email:
                          type: string
                          example: conor.williamson@example.org
                        phone_no:
                          type: string
                          example: 1-931-312-0031
                        deleted_at:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://movie-api.test/api/users?page=1'
                      last:
                        type: string
                        example: 'http://movie-api.test/api/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://movie-api.test/api/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://movie-api.test/api/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 10
      tags:
        - 'User management'
      security: []
    post:
      summary: 'Store User'
      operationId: storeUser
      description: 'This endpoint will create a new user'
      parameters: []
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully created'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully created'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user. Must not be greater than 255 characters.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address.'
                  example: johndoe@example.com
                phone_no:
                  type: string
                  description: 'The phone number of the user.'
                  example: '09 123 456 789'
                category_ids:
                  type: array
                  description: 'IDs of User favourite categories.'
                  example:
                    - 1.0
                  items:
                    type: number
                tag_ids:
                  type: array
                  description: 'IDs of User favourite tags.'
                  example:
                    - 1.0
                  items:
                    type: number
                movie_ids:
                  type: array
                  description: 'IDs of User favourite movies.'
                  example:
                    - 1.0
                  items:
                    type: number
              required:
                - name
                - email
                - phone_no
                - category_ids
                - tag_ids
                - movie_ids
      security: []
  '/api/users/{id}':
    get:
      summary: 'Show user'
      operationId: showUser
      description: 'This endpoint will show the details of the user including favourite movies, categories and tags'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully retrieved'
                  data:
                    id: 3
                    name: 'Dr. Earnestine Pacocha'
                    email: llewellyn32@example.net
                    phone_no: 1-682-751-0553
                    favourite_tags:
                      -
                        id: 1
                        name: Thrilling
                        deleted_at: null
                      -
                        id: 6
                        name: Epic
                        deleted_at: null
                      -
                        id: 10
                        name: Psychological
                        deleted_at: null
                    favourite_categories:
                      -
                        id: 1
                        name: Action
                        deleted_at: null
                      -
                        id: 6
                        name: Crime
                        deleted_at: null
                      -
                        id: 10
                        name: Horror
                        deleted_at: null
                    favourite_movies:
                      -
                        slug: titanic
                        title: Titanic
                        description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 11640
                        deleted_at: null
                      -
                        slug: star-wars-episode-v-the-empire-strikes-back
                        title: 'Star Wars: Episode V - The Empire Strikes Back'
                        description: 'After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.'
                        released_date: null
                        available_until: '2023-06-30T23:59:59.000000Z'
                        length_in_seconds: 7440
                        deleted_at: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully retrieved'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Dr. Earnestine Pacocha'
                      email:
                        type: string
                        example: llewellyn32@example.net
                      phone_no:
                        type: string
                        example: 1-682-751-0553
                      favourite_tags:
                        type: array
                        example:
                          -
                            id: 1
                            name: Thrilling
                            deleted_at: null
                          -
                            id: 6
                            name: Epic
                            deleted_at: null
                          -
                            id: 10
                            name: Psychological
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Thrilling
                            deleted_at:
                              type: string
                              example: null
                      favourite_categories:
                        type: array
                        example:
                          -
                            id: 1
                            name: Action
                            deleted_at: null
                          -
                            id: 6
                            name: Crime
                            deleted_at: null
                          -
                            id: 10
                            name: Horror
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Action
                            deleted_at:
                              type: string
                              example: null
                      favourite_movies:
                        type: array
                        example:
                          -
                            slug: titanic
                            title: Titanic
                            description: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                            released_date: null
                            available_until: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds: 11640
                            deleted_at: null
                          -
                            slug: star-wars-episode-v-the-empire-strikes-back
                            title: 'Star Wars: Episode V - The Empire Strikes Back'
                            description: 'After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.'
                            released_date: null
                            available_until: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds: 7440
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: titanic
                            title:
                              type: string
                              example: Titanic
                            description:
                              type: string
                              example: 'A seventeen-year-old aristocrat falls in love with a kind but poor artist aboard the luxurious, ill-fated R.M.S. Titanic.'
                            released_date:
                              type: string
                              example: null
                            available_until:
                              type: string
                              example: '2023-06-30T23:59:59.000000Z'
                            length_in_seconds:
                              type: integer
                              example: 11640
                            deleted_at:
                              type: string
                              example: null
                      deleted_at:
                        type: string
                        example: null
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'User management'
      security: []
    put:
      summary: 'Update User'
      operationId: updateUser
      description: 'This endpoint will update a User'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully updated'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully updated'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    example_field1:
                      - 'The example_field1 field is required.'
                    example_field2:
                      - 'The example_field2 field must be numeric.'
                    example_field3:
                      - 'The example_field3 field must be a date.'
                properties:
                  message:
                    type: string
                    example: 'The example_field1 is required. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      example_field1:
                        type: array
                        example:
                          - 'The example_field1 field is required.'
                        items:
                          type: string
                      example_field2:
                        type: array
                        example:
                          - 'The example_field2 field must be numeric.'
                        items:
                          type: string
                      example_field3:
                        type: array
                        example:
                          - 'The example_field3 field must be a date.'
                        items:
                          type: string
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user. Must not be greater than 255 characters.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address.'
                  example: johndoe@example.com
                phone_no:
                  type: string
                  description: 'The phone number of the user.'
                  example: '09 123 456 789'
                category_ids:
                  type: array
                  description: 'IDs of User favourite categories.'
                  example:
                    - 1.0
                  items:
                    type: number
                tag_ids:
                  type: array
                  description: 'IDs of User favourite tags.'
                  example:
                    - 1.0
                  items:
                    type: number
                movie_ids:
                  type: array
                  description: 'IDs of User favourite movies.'
                  example:
                    - 1.0
                  items:
                    type: number
              required:
                - name
                - email
                - phone_no
                - category_ids
                - tag_ids
                - movie_ids
      security: []
    delete:
      summary: 'Delete user'
      operationId: deleteUser
      description: 'This endpoint will delete a user'
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'User successfully trashed'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'User successfully trashed'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\ModelName] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\ModelName] 1'
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 16
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Category management'
    description: "\nAPIs for managing categories"
  -
    name: 'Movie Picture management'
    description: "\nAPIs for fetching movie pictures"
  -
    name: 'Movie management'
    description: "\nAPIs for managing movies"
  -
    name: 'Tag management'
    description: "\nAPIs for managing tags"
  -
    name: 'User management'
    description: "\nAPIs for managing users"
